    nop-0       
AA:
    jumpifneq   r6, r5, AO
    decrement   r0
    nop-0       
    shiftright  r3
AB:
    jumpifneq   r5, r1, AK
    nand        r2, r2, r5
    subtract    r2, r7, r6
    increment   r3
    push        r0
    jumpifless  r2, r0, AL
    subtract    r4, r5, r7
    jumpifneq   r0, r1, AG
    shiftleft   r0
    jumpifneq   r2, r7, AY
AC:
AD:
AE:
AF:
AG:
AH:
    sharedio    r7
AI:
    jumpifneq   r0, r0, BC
    shiftright  r2
    jumpifneq   r3, r5, AC
    reproduce   
    shiftright  r2
    nop-0       
    subtract    r4, r2, r4
    pop         r2
    add         r2, r0, r3
    reproduce   
    nop-0       
    nop-0       
    jumpifneq   r1, r0, AP
    nand        r0, r5, r6
AJ:
    jumpifless  r6, r6, AU
AK:
AL:
    swapstack   
    add         r1, r4, r7
AM:
AN:
    sharedio    r1
AO:
AP:
AQ:
    subtract    r4, r2, r6
AR:
    push        r5
    nand        r5, r5, r3
AS:
AT:
AU:
AV:
    add         r6, r3, r3
    swap        r1, r1
    swap        r5, r3
AW:
AX:
AY:
AZ:
BA:
BB:
    nop-0       
BC:
    pop         r2
    swap        r0, r0
    nop-0       
    push        r6
    decrement   r0
BD:
BE:
    nop-0       
BF:
BG:
    decrement   r0
BH:
    reproduce   
    pop         r2
BI:
BJ:
    decrement   r6
    subtract    r3, r5, r4
BK:
    decrement   r1
BL:
BM:
    reproduce   
BN:
    increment   r6
    shiftright  r5
BO:
    nand        r0, r0, r0
    sharedio    r0
    reproduce   
